<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />

    <script src="./javascripts/jquery-3.1.1.min.js"></script>      
	<script src="./javascripts/socket.io.js"></script> 
    <script>
        var host;
        var port;
        var socket;
        
     	// 문서 로딩 후 실행됨
        $(function() {

            $("#leaveRoomButton").bind('click', function(event) {
                var roomId = $("#roomIdInput").val();
                var id = $('#idInput').val();

                var message = {msg_type : 'leave', roomId : roomId, user_id : id};

                console.log(message);

                if(socket == null) {
                    alert("서버에 연결되어 있지 않습니다. 먼저 서버에 연결하세요.");
                    return;
                }

                socket.emit('message', message);
            });

            $("#joinRoomButton").bind('click', function(event) {
                var roomId = $("#roomIdInput").val();
                var id = $('#idInput').val();

                var message = {msg_type : 'join', roomId : roomId, user_id : id};

                console.log(message);

                if(socket == null) {
                    alert("서버에 연결되어 있지 않습니다. 먼저 서버에 연결하세요.");
                    return;
                }

                socket.emit('message', message);
            });

            $("#deleteRoomButton").bind('click', function(event) {
                var roomId = $("#roomIdInput").val();
                var id = $('#idInput').val();
                
                var message = {msg_type : 'delete_room', roomId : roomId, roomOwner : id};

                console.log("sended : " + message);

                if(socket == null) {
                    alert("서버에 연결되어 있지 않습니다. 먼저 서버에 연결해주세요.");
                    return;
                }

                socket.emit('message', message);
            });

            $("#updateRoomButton").bind('click', function(event) {
                var roomId = $("#roomIdInput").val();
                var roomName = $("#roomNameInput").val();
                var id = $('#idInput').val();

                if(roomId != '') {
                    var message = {msg_type : 'update_room', roomId : roomId, roomName : roomName, roomOwner : id};

                    console.log("sended : " + message);

                    if(socket == null) {
                        alert("서버에 연결되어 있지 않습니다. 먼저 서버에 연결해주세요.");
                        return;
                    }

                    socket.emit('message', message);
                } else {
                    alert("채팅방 아이디를 입력하세요.");
                }
            });

            $("#createRoomButton").bind('click', function(event) {
                var roomId = $("#roomIdInput").val();
                var roomName = $("#roomNameInput").val();
                var id = $('#idInput').val();

                var message = {msg_type : 'create_room', roomId : roomId, roomName : roomName, roomOwner : id};

                console.log("sended : " + message);

                if(socket == null) {
                    alert("서버에 연결되어 있지 않습니다. 먼저 서버에 연결해주세요.");
                    return;
                }

                socket.emit('message', message);
            });

			$("#connectButton").bind('click', function(event) {
				println('connectButton이 클릭되었습니다.');
				
                host = $('#hostInput').val();
                port = $('#portInput').val();

                connectToServer();
            });

            $("#sendButton").bind('click', function(event) {
                var sender = $("#senderInput").val();
                var recepient = $("#recepientInput").val();
                var data = $("#dataInput").val();

                var chat_type = $('#chatType').val();
                var roomId = $("#roomIdInput").val();

                var message = {msg_type : 'chat', sender : sender, recepient : recepient, data : data, roomId : roomId, chat_type : chat_type};

                console.log("sended : " + message);

                if(socket == null) {
                    alert("서버에 연결되어 있지 않습니다. 먼저 서버에 연결해주세요.");
                    return;
                }

                socket.emit('message', message);
            });

            $("#loginButton").bind('click', function(event) {
                var id = $('#idInput').val();
                var password = $('#passwordInput').val();

                var message = {msg_type : 'login', id : id, password : password};

                console.log("sended : " + message);

                if(socket == null) {
                    alert("서버에 연결되어 있지 않습니다. 먼저 서버에 연결해주세요.");
                    return;
                }

                socket.emit('message', message);
            });

        });
        
		// 서버에 연결하는 함수 정의
        function connectToServer() {

            var url = 'http://' + host + ':' + port;
            socket = io.connect(url);

            socket.on('connect', function() {
            	println('웹소켓 서버에 연결되었습니다. : ' + url);

            	socket.emit('hello_message_to_server',' ');

            	socket.on('hello_message_to_client', function(message) {
            		println(message.data);
                });

                socket.on('message', function(message) {
                    println(message.sender + " : " + message.data);
                });

                socket.on('alert', function(response_message) {
                    alert(response_message.data);
                });

                socket.on('user_list', function(message) {
                    var userCount = message.data.length;

                    $("#userList").html('<p> 로그인 사용자 리스트' + userCount + '명</p>');
                    for(var i = 0; i < userCount; i++) {
                        $("#userList").append('<p>' + message.data[i]+ '</p>');
                    }
                });

                socket.on('list', function(message) {
                    var roomCount = message.data.length;
                    $("#roomList").html('<p> 채팅방 리스트' + roomCount + '개</p>');
                    if(roomCount > 0) {
                        var userList = "";                 

                        $("#roomList").append('<p>채팅방 번호 | 채팅방 이름 | 방장 이름 | 사용자들</p>');

                        for(var i = 0; i < roomCount; i++) {
                            $("#roomList").append('<p> #' + message.data[i].roomId + ' | '  + message.data[i].roomName + ' | ' + message.data[i].roomOwner + ' | ' + message.data[i].userList.toString() + '</p>');
                        }
                    }
                    
                });
            });

            socket.on('disconnect', function() {
                println('웹소켓 연결이 종료되었습니다.');
            });

        }
        
		function println(data) {
			console.log(data);
			$('#result').append('<p>' + data + '</p>');
		}
    </script>

  </head>
  <body>
    <h3>채팅 클라이언트 03</h3>
	<br>
    <div>
        <input type="text" id="hostInput" value="localhost" />
        <input type="text" id="portInput" value="3000" />

        <input type="button" id="connectButton" value="연결하기" />
    </div>
    <br>
    <div>
        <input type="text" id="idInput" value="test01" />
        <input type="password" id="passwordInput" value="123456" />
        
        <input type="button" id="loginButton" value="로그인" />
        <input type="button" id="logoutButton" value="로그아웃" />
    </div>
    <br>
    <div>
        <div><span>보내는사람 아이디 :</span> <input type="text" id="senderInput" value="test01" /></div>
        <div><span>받는사람 아이디 :</span> <input type="text" id="recepientInput" value="ALL" /></div>
        
        <select name="chatType" id="chatType">
            <option value="chat">채팅</option>
            <option value="groupchat">그룹채팅</option>
        </select>

        <div><span>메시지 데이터 :</span> <input type="text" id="dataInput" value="안녕!"/> </div>
        <br>
        <input type="button" id="sendButton" value="전송" />
    </div>
    <br>
    <div>
        <input type="text" id="roomIdInput" value="채팅룸 번호">
        <input type="text" id="roomNameInput" value="채팅룸 이름">
        <input type="button" id="createRoomButton" value="방 만들기">
        <input type="button" id="updateRoomButton" value="방 이름 바꾸기">
        <input type="button" id="deleteRoomButton" value="방 해체하기">
    </div>
    <br>
    <div>
        <input type="button" id="joinRoomButton" value="방 입장하기">
        <input type="button" id="leaveRoomButton" value="방 나가기">
    </div>
    <br>
    <div id="roomList"></div>
    <hr/>
    <div id="userList"></div>
    <hr/>
    <p>결과 : </p>
    <div id="result"></div>
  </body>
</html>
